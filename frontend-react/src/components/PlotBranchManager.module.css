/* frontend-react/src/components/PlotBranchManager.module.css */

.managerContainer {
    padding: var(--spacing-md);
    background-color: var(--background-color-body); /* Slightly different background */
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-color-light);
    margin-top: var(--spacing-lg);
}

.managerHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--border-color-divider);
}

.managerHeader h3 {
    margin: 0;
    font-size: var(--font-size-lg);
    color: var(--text-color-headings);
    font-weight: var(--font-weight-semibold);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}
.managerHeader h3 svg {
    color: var(--color-primary);
}
.managerHeader .btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
}

.operationLoadingBar {
    composes: info-message from global;
    margin-bottom: var(--spacing-sm);
    padding: var(--spacing-xs) var(--spacing-sm);
    text-align: center;
    font-size: var(--font-size-sm);
}

.noBranchesMessage {
    composes: no-data-message from global;
    text-align: center;
    padding: var(--spacing-lg);
}

.branchList {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.branchItem {
    background-color: var(--background-color-card);
    border: 1px solid var(--border-color-base);
    border-radius: var(--border-radius-sm);
    box-shadow: var(--box-shadow-sm);
    transition: box-shadow 0.15s ease;
}
.branchItem:hover {
    box-shadow: var(--box-shadow-md);
}

.branchItemHeader {
    padding: var(--spacing-sm) var(--spacing-md);
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    border-bottom: 1px solid transparent; /* For when details are open */
    transition: background-color 0.15s ease;
}
.branchItemHeader:hover {
    background-color: var(--hover-bg-color);
}
.branchItem[aria-expanded="true"] .branchItemHeader { /* If using aria-expanded */
/* .branchItem.expanded .branchItemHeader { */ /* If using a class like 'expanded' */
    border-bottom-color: var(--border-color-light);
    background-color: var(--secondary-bg-color);
}


.branchIcon {
    color: var(--secondary-text-color);
    flex-shrink: 0;
}

.branchName {
    font-weight: var(--font-weight-medium);
    color: var(--text-color-link);
    font-size: var(--font-size-base);
    flex-grow: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.branchTypeTag {
    composes: tag-item from global;
    font-size: 0.75em;
    text-transform: capitalize;
    flex-shrink: 0;
    background-color: var(--color-info-lighter);
    color: var(--color-info-dark);
    border-color: var(--color-info-light);
}
.versionCount {
    font-size: var(--font-size-xs);
    color: var(--color-muted);
    flex-shrink: 0;
    margin-left: var(--spacing-xs);
}

.expandButton {
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--spacing-xs);
    color: var(--color-muted);
    margin-left: auto; /* Push to the right */
    flex-shrink: 0;
    border-radius: var(--border-radius-circle);
}
.expandButton:hover {
    background-color: var(--border-color-light);
    color: var(--text-color-base);
}
.expandButton svg {
    transition: transform 0.2s ease-in-out;
}
/* expanded state for chevron is handled in TSX by changing icon or via style prop */


.branchDetails {
    padding: var(--spacing-md);
    border-top: 1px solid var(--border-color-light);
    background-color: var(--background-color-body); /* Slightly different from item header */
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
}

.branchDescription {
    font-size: var(--font-size-sm);
    color: var(--text-color-paragraph);
    line-height: 1.5;
    white-space: pre-wrap;
    margin-bottom: var(--spacing-xs);
}

.branchMeta {
    font-size: var(--font-size-xs);
    color: var(--color-muted);
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-xs) var(--spacing-md);
}
.branchMeta span {
    padding: 2px 0;
}

.branchActions {
    display: flex;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
    gap: var(--spacing-sm);
    margin-top: var(--spacing-xs);
    padding-top: var(--spacing-sm);
    border-top: 1px dotted var(--border-color-lightest);
}
.branchActions .btn-xs {
    display: inline-flex;
    align-items: center;
    gap: 2px; /* Smaller gap for xs buttons */
}


/* BranchFormModal specific styles - mostly inherits from pageViewStyles.modal... */
.branchFormModalContent {
    max-width: 600px; /* Adjust width as needed */
}
.formGroupCompact label {
    font-size: 0.85em;
    margin-bottom: calc(var(--spacing-xs) / 1.5);
}
.formGroupCompact .inputField,
.formGroupCompact .textareaField,
.formGroupCompact .selectField,
.formGroupCompact .inputFieldSmall {
    font-size: 0.9em;
    padding: var(--spacing-xs) var(--spacing-sm);
}
.formGroupCompact .textareaField {
    min-height: 60px;
}

/* AISuggestionModal specific styles */
.aiSuggestionModalContent {
    max-width: 600px;
}
.aiModalDescription {
    font-size: var(--font-size-sm);
    color: var(--text-color-paragraph);
    margin-bottom: var(--spacing-md);
    line-height: 1.6;
}
.aiModalDescription strong {
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary);
}


@media (max-width: 600px) {
    .managerHeader {
        flex-direction: column;
        align-items: flex-start;
    }
    .branchItemHeader {
        flex-wrap: wrap; /* Allow name and tags to wrap */
    }
    .branchName {
        min-width: 100%; /* Allow name to take full width before tags wrap */
        margin-bottom: var(--spacing-xs);
    }
    .branchTypeTag, .versionCount {
        margin-left: 0; /* Reset margin if they wrap */
    }
    .expandButton {
        margin-left: var(--spacing-sm); /* Ensure some space if name wraps */
    }
}