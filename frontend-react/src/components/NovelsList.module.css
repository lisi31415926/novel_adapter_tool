/* frontend-react/src/components/NovelsList.module.css */

.novelsListContainer {
    /* 继承或应用 global.css 中的 .section 基础样式 */
    margin-top: var(--spacing-lg);
    padding: var(--spacing-lg);
    background-color: var(--background-color-card);
    border: 1px solid var(--border-color-base);
    border-radius: var(--border-radius-md);
    box-shadow: var(--box-shadow-base);
  }
  
  .listHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--border-color-divider);
  }
  
  .listHeader h2 {
    margin: 0;
    font-size: var(--font-size-xl);
    color: var(--text-color-headings);
    font-weight: var(--font-weight-semibold);
    display: inline-flex; /* 让图标和文字对齐 */
    align-items: center;
  }
  
  .listHeader .btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
  }
  
  /* 旧的 .list 样式，现在用于虚拟滚动容器，重命名或调整 */
  .listVirtualScrollContainer { /* 应用于 ul 元素, 即 parentRef */
    list-style-type: none;
    padding: 0;
    margin: 0;
    /* 关键：为虚拟滚动设置固定高度和溢出处理 */
    height: 500px; /* 示例高度，根据需要调整 */
    max-height: 70vh; /* 或者使用视口高度百分比 */
    overflow-y: auto; /* 必需 */
    position: relative; /* 内部绝对定位的容器需要这个 */
    border: 1px solid var(--border-color-light); /* 可选：给滚动区域一个边框 */
    border-radius: var(--border-radius-sm);
  }
  
  /* 虚拟列表项的新样式 */
  .listItemVirtual { /* 应用于 li 元素 */
    /* position: absolute, top, left, width, height 由 virtualizer 的 style prop 提供 */
    display: flex;
    justify-content: space-between;
    align-items: flex-start; /* 保持与原 .listItem 一致 */
    padding: var(--spacing-md);
    /* 移除 margin-bottom，因为间距由transform控制 */
    border-bottom: 1px solid var(--border-color-lightest); /* 列表项之间的细微分割线 */
    background-color: var(--background-color-card); /* 确保有背景 */
    cursor: pointer;
    transition: background-color 0.2s ease, border-left-color 0.2s ease; /* 调整过渡效果 */
    border-left: 3px solid transparent; /* 用于悬停/激活状态的指示边框 */
  }
  
  .listItemVirtual:hover {
    background-color: var(--hover-bg-color);
    border-left-color: var(--color-primary-light);
  }
  /* 如果需要聚焦样式，可以添加 .listItemVirtual:focus-within */
  
  
  .novelInfo {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    flex-grow: 1;
    margin-right: var(--spacing-md);
    overflow: hidden; 
  }
  
  .novelTitle {
    font-weight: var(--font-weight-semibold);
    color: var(--text-color-headings);
    font-size: var(--font-size-lg);
    margin-bottom: var(--spacing-xs);
    word-break: break-all;
    line-height: 1.3;
  }
  
  .novelMeta,
  .novelSummarySnippet,
  .novelKeywordsSnippet,
  .novelStatusSnippet {
    font-size: var(--font-size-sm);
    color: var(--color-muted);
    line-height: 1.5;
    word-break: break-word;
  }
  
  .novelSummarySnippet {
    color: var(--text-color-paragraph);
    font-style: italic;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: calc(var(--line-height-base) * var(--font-size-sm) * 2);
  }
  
  .novelKeywordsSnippet {
    margin-top: var(--spacing-xs);
  }
  
  .novelStatusSnippet {
    margin-top: var(--spacing-xs);
  }
  
  /* 分析状态文本和图标的样式 (与之前一致) */
  .statusText {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: 3px 8px;
    border-radius: var(--border-radius-pill);
    font-size: 0.8em;
    font-weight: var(--font-weight-medium);
    border: 1px solid transparent;
    white-space: nowrap;
    text-transform: capitalize;
  }
  .statusIcon { flex-shrink: 0; }
  .statusText.pending, .statusText.inprogress { background-color: var(--color-info-bg); color: var(--color-info-text); border-color: var(--color-info-border); }
  .statusText.completed { background-color: var(--color-warning-bg); color: var(--color-warning-text); border-color: var(--color-warning-border); }
  .statusText.vectorized { background-color: var(--color-success-bg); color: var(--color-success-text); border-color: var(--color-success-border); }
  .statusText.failed, .statusText.completedwitherrors { background-color: var(--color-danger-bg); color: var(--color-danger-text); border-color: var(--color-danger-border); }
  .statusText.unknown { background-color: var(--secondary-bg-color); color: var(--color-muted); border-color: var(--border-color-base); }
  .iconSpin { composes: spinning-icon from global; } /* 确保 spinning-icon 全局可用 */
  .vectorized svg { color: var(--color-success); }
  .completed svg { color: var(--color-warning); }
  .failed svg, .completedwitherrors svg { color: var(--color-danger); }
  .iconMuted svg { color: var(--color-muted); }
  
  
  .deleteButton {
    flex-shrink: 0;
    align-self: center; 
    padding: var(--spacing-xs) var(--spacing-sm);
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
  }
  
  /* 旧的分页控件样式，现在不需要了 */
  /* .pagination { ... } */
  
  /* "加载更多" 按钮区域样式 */
  .loadMoreContainer {
    display: flex;
    justify-content: center;
    padding: var(--spacing-md) 0; /* 上下间距 */
    margin-top: var(--spacing-sm); /* 与列表的间距 */
    border-top: 1px solid var(--border-color-light); /* 可选的顶部分割线 */
  }
  
  .loadMoreButton {
    composes: btn btn-secondary from global; /* 继承全局次要按钮样式 */
    padding: var(--spacing-sm) var(--spacing-lg); /* 按钮内边距 */
    font-size: var(--font-size-base);
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
  }
  .loadMoreButton:disabled {
      opacity: 0.7;
      cursor: not-allowed;
  }
  
  /* "已加载全部" 提示信息样式 */
  .allLoadedMessage {
    text-align: center;
    color: var(--color-muted);
    font-style: italic;
    padding: var(--spacing-md) 0;
    margin-top: var(--spacing-sm);
    font-size: var(--font-size-sm);
  }
  
  
  /* 居中的消息提示 (用于列表为空或初始加载/错误时) */
  .centeredMessage {
    text-align: center;
    padding: var(--spacing-lg);
    min-height: 150px; /* 给消息一个最小高度 */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-md);
  }
  .centeredMessage .btn { margin-top: var(--spacing-sm); }
  
  /* 内联的加载/错误提示 (用于列表已存在数据，但正在刷新或刷新出错时) */
  .inlineLoading,
  .inlineError {
    font-size: var(--font-size-sm);
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--border-radius-sm);
    margin-bottom: var(--spacing-sm);
    text-align: center;
    display: flex; /* 使图标和文字对齐 */
    align-items: center; /* 垂直居中 */
    justify-content: center; /* 水平居中 */
    gap: var(--spacing-xs); /* 图标和文字间距 */
  }
  
  .inlineLoading {
    color: var(--color-info-text);
    background-color: var(--color-info-bg);
    border: 1px dashed var(--color-info-border);
  }
  
  .inlineError {
    color: var(--color-danger-text);
    background-color: var(--color-danger-bg);
    border: 1px solid var(--color-danger-border);
  }
  
  /* 确保 iconSpin 在此模块内或全局可用 */
  /* .iconSpin { animation: spin 1.5s linear infinite; } */
  /* @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } */