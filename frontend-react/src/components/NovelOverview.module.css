/* frontend-react/src/components/NovelOverview.module.css */

.overviewContainer {
    /* 继承或应用 global.css 中的 .section 基础样式 */
    /* padding: var(--spacing-lg); 在 TSX 中已由父级 .section 类提供 */
    /* background-color: var(--background-color-card); */
    /* border-radius: var(--border-radius-large); */
    /* box-shadow: var(--box-shadow-medium); */
    /* margin-bottom: var(--spacing-xl); */
}

.loadingStateContainer { /* 新增：用于概览自身的加载状态 */
    composes: loading-message from global; /* 继承全局加载消息样式 */
    padding: var(--spacing-xl);
    text-align: center;
    min-height: 200px; /* 给一个最小高度 */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-md);
    background-color: var(--background-color-card); /* 确保有背景 */
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-color-light);
}

.loadingIcon {
    composes: spinning-icon from global; /* 确保 spinning-icon 全局可用 */
}


.titleContainer {
    /* 包裹小说标题、作者和状态指示器的容器 */
    display: flex;
    justify-content: space-between;
    /* 标题和状态指示器两端对齐 */
    align-items: flex-start;
    /* 顶部对齐，以防状态指示器过高时影响标题对齐 */
    margin-bottom: var(--spacing-lg);
    /* 与下方内容的间距 */
    flex-wrap: wrap;
    /* 允许在小屏幕上换行 */
    gap: var(--spacing-md);
    /* 标题和状态之间的间距 */
    border-bottom: 1px solid var(--border-color-divider);
    /* 标题区域底部分割线 */
    padding-bottom: var(--spacing-md);
    /* 标题区域下内边距 */
}

.overviewContainer h2 {
    /* 小说主标题 */
    margin-top: 0;
    margin-bottom: 0;
    /* 由 .titleContainer 的 gap 控制与作者的间距 */
    color: var(--color-primary-dark, var(--color-primary));
    /* 使用主色或其深色变体 */
    font-size: var(--font-size-xxl);
    /* 确保标题足够大 */
    line-height: 1.2;
    /* 调整行高 */
    font-weight: var(--font-weight-bold);
    /* 标题加粗 */
    word-break: break-word;
    /* 防止长标题溢出，特别是在flex容器中 */
    display: flex;
    /* 用于图标和文字对齐 */
    align-items: center;
    /* 垂直居中 */
}

.author {
    /* 作者信息 */
    font-size: var(--font-size-lg);
    /* 作者信息字体稍小 */
    color: var(--secondary-text-color);
    /* 使用次要文本颜色 */
    font-weight: var(--font-weight-normal);
    /* 作者字重正常 */
    margin-left: var(--spacing-sm);
    /* 与标题的间距 */
    display: block;
    /* 如果希望作者换行显示，或者 inline-block 如果希望与标题同行但可独立样式 */
    margin-top: var(--spacing-xs);
    /* 如果换行，与标题的垂直间距 */
    white-space: nowrap;
    /* 防止作者名过长时换行，如果空间有限可考虑移除或用 ellipsis */
    overflow: hidden;
    text-overflow: ellipsis;
}

.statusIndicator {
    /* 分析状态指示器的整体容器 */
    display: inline-flex;
    /* 使内部元素（图标、文本、按钮）能良好对齐 */
    align-items: center;
    /* 垂直居中对齐 */
    gap: var(--spacing-sm);
    /* 状态图标、文本和错误切换按钮之间的间距 */
    padding: var(--spacing-xs) var(--spacing-md);
    /* 状态指示器的内边距 */
    border-radius: var(--border-radius-pill);
    /* 胶囊形状圆角 */
    font-size: var(--font-size-sm);
    /* 状态文本字体大小 */
    font-weight: var(--font-weight-medium);
    /* 状态文本字重 */
    border: 1px solid transparent;
    /* 透明边框，防止hover或active时跳动，具体颜色由状态类定义 */
    white-space: nowrap;
    /* 防止状态文字意外换行 */
    align-self: center;
    /* 在 flex 容器中垂直居中 (如果 .titleContainer 是 flex) */
    flex-shrink: 0;
    /* 防止在空间不足时被压缩 */
}

.statusIndicator svg {
    /* 状态图标的基础样式 */
    flex-shrink: 0;
    /* 防止图标被压缩 */
    /* 图标大小已在 TSX 中通过 size 属性控制 */
}

.errorToggleButton {
    /* 显示/隐藏错误详情的按钮 */
    background: none;
    border: none;
    padding: 0 var(--spacing-xs);
    /* 调整内边距，使其不占过多空间 */
    margin-left: var(--spacing-xs);
    /* 与状态文字的微小间距 */
    cursor: pointer;
    color: inherit;
    /* 继承父元素 .statusIndicator 的文字颜色，以保持一致性 */
    display: inline-flex;
    /* 使内部图标和文字（如果有）对齐 */
    align-items: center;
    opacity: 0.8;
    /* 默认稍透明，增加可点击感 */
    transition: opacity 0.2s ease;
}

.errorToggleButton:hover {
    opacity: 1;
    /* 鼠标悬停时不透明 */
}

/* --- 状态颜色类 (与 NovelsList.module.css 中的状态颜色类保持一致或复用全局变量) --- */
/* 这些类名由 getAnalysisStatusInfo 和 renderAnalysisStatus 动态应用 */
.statusIndicator.pending,
.statusIndicator.inprogress {
    background-color: var(--color-info-bg);
    color: var(--color-info-text);
    border-color: var(--color-info-border);
}

.statusIndicator.completed {
    /* 分析完成但未向量化，用警告色提示 */
    background-color: var(--color-warning-bg);
    color: var(--color-warning-text);
    border-color: var(--color-warning-border);
}

.statusIndicator.vectorized {
    /* 完全就绪，用成功色 */
    background-color: var(--color-success-bg);
    color: var(--color-success-text);
    border-color: var(--color-success-border);
}

.statusIndicator.failed,
.statusIndicator.completedwitherrors {
    background-color: var(--color-danger-bg);
    color: var(--color-danger-text);
    border-color: var(--color-danger-border);
}

.statusIndicator.unknown {
    /* 未知状态 */
    background-color: var(--secondary-bg-color);
    color: var(--color-muted);
    border-color: var(--border-color-base);
}

.statusIndicator .loadingIcon { /* 已在TSX中使用 spinning-icon 全局类 */
    composes: spinning-icon from global;
}

.statusReady svg { color: var(--color-success); }
.statusWarning svg { color: var(--color-warning); }
.statusError svg { color: var(--color-danger); }
.statusUnknown svg { color: var(--color-muted); }


.errorDetailsContainer {
    background-color: var(--color-danger-lighter);
    border: 1px solid var(--color-danger-light);
    border-left: 4px solid var(--color-danger);
    border-radius: var(--border-radius-md);
    padding: var(--spacing-sm) var(--spacing-md);
    margin-bottom: var(--spacing-lg);
    margin-top: var(--spacing-xs);
}

.errorDetailsContainer h4 {
    margin-top: 0; margin-bottom: var(--spacing-sm);
    color: var(--color-danger-dark, var(--color-danger));
    font-size: 0.95em; font-weight: var(--font-weight-semibold);
    border-bottom: none; padding-bottom: 0;
}

.errorDetailsContainer ul {
    list-style-type: disc; padding-left: var(--spacing-lg);
    margin: 0; font-size: var(--font-size-sm);
    color: var(--color-danger-text, var(--color-danger));
    max-height: 150px; overflow-y: auto; line-height: 1.4;
}
.errorDetailsContainer li { margin-bottom: var(--spacing-xs); }


.gridContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--spacing-lg);
    margin-top: var(--spacing-lg);
}

.metadataSection,
.analysisSection {
    background-color: var(--secondary-bg-color);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-color-base);
    box-shadow: var(--box-shadow-sm);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
}

.metadataSection h3,
.analysisSection h3 {
    margin-top: 0; margin-bottom: var(--spacing-md);
    color: var(--text-color-headings); font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    border-bottom: 1px solid var(--border-color-divider);
    padding-bottom: var(--spacing-sm); line-height: 1.3;
    display: flex; align-items: center;
}
.metadataSection h3 svg, /* 图标与子标题的间距 */
.analysisSection h3 svg {
    margin-right: var(--spacing-sm);
    color: var(--color-primary); /* 子区域标题图标也用主色 */
}


.infoBlock { margin-bottom: var(--spacing-md); }
.infoBlock:last-child { margin-bottom: 0; }

.infoBlock strong {
    display: block; margin-bottom: var(--spacing-sm);
    color: var(--secondary-text-color); font-size: 0.9em;
    font-weight: var(--font-weight-medium);
    display: inline-flex; /* For icon alignment */
    align-items: center;
    gap: var(--spacing-xs);
}
.infoBlock strong svg { /* Icon inside strong tag */
    color: var(--color-secondary); /* Or inherit */
    margin-right: 2px; /* Ensure a bit of space */
}


.infoBlock p {
    margin: 0; line-height: 1.6; color: var(--text-color-paragraph);
    font-size: 0.95em; white-space: pre-wrap; word-break: break-word;
}

.summaryTextArea,
.rolesDisplay {
    white-space: pre-wrap; word-wrap: break-word;
    max-height: 200px; overflow-y: auto;
    padding: var(--spacing-sm);
    background-color: var(--background-color-card);
    border: 1px solid var(--border-color-input);
    border-radius: var(--border-radius-sm);
    font-family: var(--font-family-sans-serif);
    font-size: 0.95em; line-height: 1.6; color: var(--text-color-paragraph);
}

.keywordsDisplay {
    padding: var(--spacing-xs); display: flex;
    flex-wrap: wrap; gap: var(--spacing-xs) var(--spacing-sm);
}
.keywordTagItem { composes: tag-item from global; }

.copyButton {
    composes: btn btn-xs btn-outline-secondary from global;
    padding: var(--spacing-xs) var(--spacing-sm); font-size: var(--font-size-sm);
    margin-top: var(--spacing-sm); margin-left: 0;
    display: inline-flex; align-items: center; gap: var(--spacing-xs);
}

.chartContainer { margin-bottom: var(--spacing-lg); min-height: 280px; }
.searchSection { margin-top: var(--spacing-md); }

.searchForm { display: flex; gap: var(--spacing-sm); margin-bottom: var(--spacing-md); }
.searchInput { composes: form-control from global; flex-grow: 1; }
.searchInput::placeholder { color: var(--text-color-placeholder); }
.searchInput:disabled { background-color: var(--disabled-bg-color); cursor: not-allowed; opacity: 0.7; }

.searchButton {
    composes: btn btn-primary from global;
    padding: var(--spacing-sm) var(--spacing-md);
    display: inline-flex; align-items: center; gap: var(--spacing-xs);
    flex-shrink: 0;
}
.searchButton:disabled { opacity: 0.6; cursor: not-allowed; }

/* --- 新增样式 for Plot Analysis Data --- */
.overviewList {
    list-style: none;
    padding-left: 0;
    margin: var(--spacing-xs) 0 0 0; /* 列表与上方strong标签的间距 */
}

.overviewList li {
    padding: calc(var(--spacing-xs) / 2) 0; /* 列表项上下更紧凑的padding */
    font-size: var(--font-size-sm);
    color: var(--text-color-paragraph);
    line-height: 1.5;
    border-bottom: 1px dotted var(--border-color-lightest);
    display: flex; /* 用于对齐主要文本和右侧标签 */
    justify-content: space-between;
    align-items: flex-start; /* 允许描述换行时标签保持在顶部 */
    gap: var(--spacing-sm);
}

.overviewList li:last-child {
    border-bottom: none;
}

.overviewList li strong { /* 用于角色名等主要文本 */
    font-weight: var(--font-weight-medium);
    color: var(--text-color-base); /* 主要文本颜色 */
    margin-bottom: 0; /* 移除strong的默认下边距，因其在flex item中 */
    flex-grow: 1; /* 允许主要文本占据更多空间 */
    word-break: break-word; /* 允许长名称换行 */
}

.overviewDescription { /* 用于角色描述、事件摘要的次要文本 */
    color: var(--color-muted);
    font-size: 0.9em; /* 比列表项主要文本略小 */
    margin-left: var(--spacing-sm); /* 如果希望描述在名称下方，则调整布局 */
    display: block; /* 如果希望描述换行 */
    padding-top: 2px; /* 微调与上方strong的间距 */
}

.roleTypeTag,
.conflictLevelTag,
.eventTimestamp {
    composes: tag-item from global; /* 继承全局标签样式 */
    font-size: 0.8em; /* 标签字体更小 */
    padding: 2px 6px; /* 标签内边距调整 */
    background-color: var(--secondary-bg-color); /* 使用次级背景色 */
    color: var(--secondary-text-color); /* 次级文本颜色 */
    border: 1px solid var(--border-color-light);
    white-space: nowrap; /* 确保标签内容不换行 */
    flex-shrink: 0; /* 防止标签被压缩 */
    align-self: center; /* 在flex item中垂直居中 */
}

.roleTypeTag { background-color: var(--color-info-lighter); color: var(--color-info-dark); border-color: var(--color-info-light); }
.conflictLevelTag { background-color: var(--color-warning-lighter); color: var(--color-warning-dark); border-color: var(--color-warning-light); }
.eventTimestamp { background-color: var(--code-bg-color); color: var(--text-color-paragraph); }

.relationshipOverviewText,
.jsonPreview { /* .jsonPreview is used by worldview in its JSON string edit mode */
    white-space: pre-wrap;
    word-wrap: break-word;
    max-height: 180px; /* 比摘要和角色略小的高度 */
    overflow-y: auto;
    padding: var(--spacing-sm);
    background-color: var(--background-color-input-disabled); /* 用禁用输入框背景，表示只读信息 */
    border: 1px solid var(--border-color-input);
    border-radius: var(--border-radius-sm);
    font-family: var(--font-family-sans-serif); /* 普通字体 */
    font-size: 0.9em; /* 字体稍小 */
    line-height: 1.6;
    color: var(--text-color-paragraph);
    margin-top: var(--spacing-xs);
}

.jsonPreview { /* This is the fallback for older worldview_settings if it's a string */
    composes: codeBlock from global; /* 如果是JSON，用代码块样式 */
    max-height: 180px;
    font-size: 0.85em;
    background-color: var(--code-bg-color);
}

/* --- 新增：世界观设定样式 (用于新的键值对展示和编辑) --- */
.worldviewHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-sm); 
}
.worldviewHeader strong { /* "世界观设定:" 标签 */
    margin-bottom: 0; 
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
}
.worldviewHeader strong svg {
    color: var(--color-secondary); 
}

.editWorldviewButton {
    composes: btn btn-xs btn-outline-secondary from global;
    padding: 2px 6px; 
    font-size: 0.8em; 
    line-height: 1.2;
    display: inline-flex;
    align-items: center;
    gap: 2px;
}
.editWorldviewButton svg {
    margin-right: 2px;
}

.worldviewLoading {
    font-style: italic;
    color: var(--color-muted);
    font-size: var(--font-size-sm);
    padding: var(--spacing-sm) 0;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
}
.worldviewLoading .spinning-icon {
    composes: spinning-icon from global;
}

.noWorldviewText {
    font-style: italic;
    color: var(--color-muted);
    font-size: var(--font-size-sm);
    padding: var(--spacing-sm) 0;
}

/* 新增：用于键值对列表展示世界观 */
.worldviewDisplayList {
    list-style: none;
    padding: 0;
    margin-top: var(--spacing-xs);
    max-height: 200px; /* 限制预览高度 */
    overflow-y: auto;
    border: 1px solid var(--border-color-light);
    border-radius: var(--border-radius-sm);
    background-color: var(--background-color-body);
}
.worldviewDisplayItem {
    display: flex;
    justify-content: space-between;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-bottom: 1px dotted var(--border-color-lightest);
    font-size: 0.85em;
    gap: var(--spacing-sm);
}
.worldviewDisplayItem:last-child {
    border-bottom: none;
}
.worldviewDisplayKey {
    font-weight: var(--font-weight-medium);
    color: var(--secondary-text-color);
    flex-shrink: 0;
    max-width: 40%; /* 限制键名显示宽度 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.worldviewDisplayValue {
    color: var(--text-color-paragraph);
    text-align: right;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-grow: 1;
}
.worldviewMoreIndicator {
    font-style: italic;
    color: var(--color-muted);
    font-size: 0.8em;
    text-align: center;
    padding: var(--spacing-xs);
}


/* --- 新增：世界观动态键值对编辑模态框特定样式 --- */
.worldviewModalContentDynamic { 
    /* 继承自 pageViewStyles.modalContent */
    max-width: 800px; 
}
.dynamicFormModalBody { /* 模态框主体内边距和滚动 */
    max-height: calc(80vh - 180px); /* 估算减去头部和脚部高度 */
    overflow-y: auto;
    padding-top: var(--spacing-sm) !important; 
}

.worldviewEditHelpText {
    font-size: var(--font-size-sm);
    color: var(--text-color-paragraph);
    margin-bottom: var(--spacing-md);
    line-height: 1.5;
    padding: var(--spacing-sm);
    background-color: var(--secondary-bg-color);
    border-radius: var(--border-radius-sm);
    border-left: 3px solid var(--color-info);
}

.entriesList {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
    max-height: 350px; /* 限制条目列表区域高度 */
    overflow-y: auto;
    padding: var(--spacing-xs);
    border: 1px solid var(--border-color-light);
    border-radius: var(--border-radius-sm);
    background-color: var(--background-color-body);
}

.noEntriesMessage {
    composes: info-message from global;
    text-align: center;
    padding: var(--spacing-md);
    font-style: italic;
    background-color: transparent;
    border: 1px dashed var(--border-color-divider);
}

.worldviewEntryRow {
    display: grid;
    grid-template-columns: minmax(150px, 1fr) minmax(120px, auto) minmax(200px, 2fr) auto;
    /* Key | Type | Value | RemoveBtn */
    gap: var(--spacing-sm);
    align-items: center; /* 垂直居中对齐所有元素 */
    padding: var(--spacing-sm);
    border-radius: var(--border-radius-sm);
    background-color: var(--background-color-card); 
    border: 1px solid var(--border-color-divider);
}
.worldviewEntryRow:hover {
    border-color: var(--color-primary-light);
}

.entryInputGroup {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
}
.entryInputGroup label {
    font-size: var(--font-size-xs);
    color: var(--secondary-text-color);
    font-weight: var(--font-weight-medium);
    margin-bottom: 0;
}
.entryInputGroup .inputField,
.entryInputGroup .selectField,
.entryInputGroup .textareaField {
    composes: form-control from global;
    font-size: 0.9em;
    padding: var(--spacing-xs) var(--spacing-sm);
    height: auto; /* 允许根据内容调整 */
    line-height: 1.4; /* 优化输入框内文本行高 */
}
.entryInputGroup .textareaField {
    min-height: 40px; 
    resize: vertical;
}


.keyInput { /* 用于键名输入 */ }
.typeSelect { /* 用于类型选择 */ }
.valueInputCell { /* 包裹值输入控件的单元格 */ }

.removeEntryButton, .addEntryButton {
    composes: btn btn-xs btn-icon from global;
    align-self: center; /* 垂直居中按钮 */
    padding: 4px !important; /* 调整按钮大小 */
    line-height: 1 !important;
    height: fit-content !important;
}
.removeEntryButton {
    color: var(--color-danger);
}
.removeEntryButton:hover {
    background-color: var(--color-danger-lighter);
    color: var(--color-danger-dark);
}
.addEntryButton {
    color: var(--color-success);
    background-color: var(--color-success-lighter);
    border: 1px solid var(--color-success-light);
}
.addEntryButton:hover {
    background-color: var(--color-success);
    color: var(--text-color-light);
}


.addNewEntryForm {
    margin-top: var(--spacing-lg);
    padding-top: var(--spacing-lg);
    border-top: 1px dashed var(--border-color-divider);
}
.addNewEntryForm h5 {
    font-size: var(--font-size-base);
    color: var(--text-color-headings);
    margin-bottom: var(--spacing-md);
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
}
.addNewEntryForm h5 svg {
    color: var(--color-success);
}

/* JSON编辑相关的样式 (如果仍然部分保留JSON编辑作为后备) */
.jsonEditTextarea { /* (与世界观动态表单中的textarea区分开) */
    composes: form-control from global;
    min-height: 200px;
    max-height: 50vh;
    font-family: var(--font-family-monospace);
    font-size: var(--font-size-sm);
    line-height: 1.6;
    white-space: pre;
    overflow: auto;
}
.invalidJsonInput { /* 用于纯JSON编辑时textarea的错误状态 */
    border-color: var(--color-danger) !important;
    box-shadow: 0 0 0 0.1rem rgba(var(--color-danger-rgb), 0.25) !important;
}
.jsonValidationStatus { /* JSON校验状态文本 */
    font-size: var(--font-size-xs);
    margin-top: var(--spacing-xs);
    min-height: 1.2em;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
}
.jsonValidationStatus .errorIcon { color: var(--color-danger); }
.jsonValidationStatus .successIcon { color: var(--color-success); }
.jsonValidationStatus .infoIcon { color: var(--color-info); }


@media (max-width: 768px) {
    .worldviewEntryRow {
        grid-template-columns: 1fr; /* 小屏幕上，每个输入项占一行 */
    }
    .entryInputGroup label {
        /* 确保标签在输入框上方 */
    }
    .removeEntryButton, .addEntryButton {
        width: 100%; /* 按钮占满宽度 */
        margin-top: var(--spacing-sm);
        justify-content: center;
    }
     .worldviewModalContentDynamic {
        max-width: 95vw;
    }
    .addNewEntryForm .worldviewEntryRow {
        /* 确保添加表单也响应式 */
    }
}